name: Inventory and Build

on:
  push:
    branches:
      - main
  create:
      tags:
        - v*
jobs:
  inventory-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python environment
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip setuptools

      - name: Install dependencies
        run: |
          source env/bin/activate
          pip install -r requirements.txt

      - name: Build
        run: |
          source env/bin/activate
          python setup.py sdist

      - name: Test
        run: |
          source env/bin/activate
          python -m unittest discover -s tests

      - name: Security Scan with Bandit
        run: |
          source env/bin/activate
          pip install bandit
          bandit -r my_app

      - name: Create SBOM with Trivy
        uses: aquasecurity/trivy-action@0.29.0
        with:
          scan-type: fs
          format: cyclonedx
          output: sbom.json

      - name: Install Chainloop CLI
        run: |
          curl -sfL https://docs.chainloop.dev/install.sh | bash -s
          # export PATH=$PATH:$HOME/.chainloop/bin
          # chainloop auth login
          # chainloop organization create --name arena-si-devops

      # - name: Create attestation for SLSA Level 3 with Chainloop
      #   run: |
      #     chainloop attestation create --image-name my-image --output attestation.json

      - name: Package application
        run: |
          docker build -t my-image .
          docker tag my-image jamesrgregg/my-image:latest

      - name: Trivy Scan Docker Image
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: my-image

      - name: Get Release SHA
        run: echo ${{ github.sha }} > Release.txt
      - name: Create Release
        run: cat Release.txt
      - name: Release
        uses: ncipollo/release-action@v1.15.0
        with:
          artifacts: "*.tar.gz,*.txt,sbom.json"
          bodyFile: "body.md"
